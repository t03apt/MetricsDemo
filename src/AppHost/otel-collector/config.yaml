receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
  filter/healthcheck:
    traces:
        span:
          - 'attributes["http.target"] == "/healthcheck"'
  attributes/defaults:
    actions:
      - key: environment
        value: development
        action: insert
      - key: k8s_namespace_name
        value: default
        action: insert
  metricstransform:
    transforms:
      - include: .*
        match_type: regexp
        action: update
        operations:
          - action: add_label
            new_label: environment
            new_value: preprod
  transform/attributes:
    metric_statements:
      - context: datapoint
        statements:
        - set(attributes["k8s_pod_name"], resource.attributes["service.instance.id"])
        - set(attributes["k8s_statefulset_name"], resource.attributes["service.name"])
        - set(attributes["full_service_name"], Concat([attributes["k8s_namespace_name"], attributes["k8s_statefulset_name"], attributes["k8s_pod_name"]], "/"))

exporters:
  otlp/aspire:
    endpoint: ${env:ASPIRE_ENDPOINT}
    headers:
      x-otlp-api-key: ${env:ASPIRE_API_KEY}
    tls:
        insecure: true

  prometheus:
    endpoint: "0.0.0.0:8889"
  
service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: 
        - batch
        - filter/healthcheck
        - attributes/defaults
        - transform/attributes
      exporters: [otlp/aspire]
    metrics:
      receivers: [otlp]
      processors: 
        - batch
        - attributes/defaults
        - transform/attributes
      exporters: [otlp/aspire, prometheus]
    logs:
      receivers: [otlp]
      processors: 
        - batch
        - attributes/defaults
        - transform/attributes
      exporters: [otlp/aspire]
