// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by ContractGenerator, version 1.11.3
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Contracts
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("ContractGenerator", "1.11.3")]
	public partial class WeatherForecast : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""WeatherForecast"",""namespace"":""Contracts"",""fields"":[{""name"":""Date"",""type"":{""type"":""int"",""logicalType"":""date""}},{""name"":""Summary"",""type"":""string""},{""name"":""Temperature"",""type"":""int""},{""name"":""Unit"",""type"":{""type"":""enum"",""name"":""TemperatureUnit"",""namespace"":""Contracts"",""symbols"":[""Celsius"",""Fahrenheit""]}}]}");
		private System.DateTime _Date;
		private string _Summary;
		private int _Temperature;
		private Contracts.TemperatureUnit _Unit;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return WeatherForecast._SCHEMA;
			}
		}
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				this._Date = value;
			}
		}
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				this._Summary = value;
			}
		}
		public int Temperature
		{
			get
			{
				return this._Temperature;
			}
			set
			{
				this._Temperature = value;
			}
		}
		public Contracts.TemperatureUnit Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				this._Unit = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Date;
			case 1: return this.Summary;
			case 2: return this.Temperature;
			case 3: return this.Unit;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Date = (System.DateTime)fieldValue; break;
			case 1: this.Summary = (System.String)fieldValue; break;
			case 2: this.Temperature = (System.Int32)fieldValue; break;
			case 3: this.Unit = (Contracts.TemperatureUnit)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
